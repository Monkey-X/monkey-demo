apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'//这里添加
apply plugin: 'kotlin-android-extensions'//这里添加
//plugins{
//    id 'com.android.application'
//}

//格式化当前的时间
def buildTime() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return formattedDate
}

android {
//    签名属性配置
    signingConfigs {
        config {
            keyAlias 'monkey@xlc'  //签名证书中秘钥别名
            keyPassword 'monkey@xlc' //签名证书中秘钥的密码
            storeFile file('C:/Users/xlc/Desktop/monkey.jks') //签名证书文件
            storePassword 'monkey@xlc' //签名证书文件的密码
//            storeType  签名证书的类型
        }
    }

    compileSdkVersion rootProject.ext.compileSdkVersion//编译该模块的SDK版本
    buildToolsVersion rootProject.ext.buildSdkVersion//Android构建工具的版本
    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion//基于那个SDK版本开发
        versionCode rootProject.ext.versionCode//app内部的版本号，用于控制app升级
        versionName rootProject.ext.versionName//app版本名，发布的版本号
        multiDexEnabled true  //  dex突破65535的限制
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//单元测试使用的Runner，默认为android.test.InstrumentationTestRunner
        flavorDimensions "versionCode"
    }

    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }

//    配置Java编译选项
//    compileOptions{
//        encoding = 'utf-8'
//        sourceCompatibility = JavaVersion.VERSION_1_6
//        targetCompatibility = JavaVersion.VERSION_1_6
//    }

//    adb的选项配置
//    adbOptions{
//        timeOutInMs = 5*1000
//        installOptions '-r', '-s'
//    }

    buildTypes {//配置构建不同类型的APK
        release {
//            applicationIdSuffix  //配置applicationId的后缀
//            buildConfigField() //配置不同的开发环境，如测试环境和正式环境
            debuggable false //表示是否支持断点调试
            jniDebuggable false //表示是否可以调试NDK代码
            minifyEnabled false  //开启混淆
            zipAlignEnabled false  //Zipalign优化，提高apk运行效率
            shrinkResources false   //移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config//默认的签名信息
//            multiDexEnabled false  //是否启用自动拆分多个DEX的功能
        }

        debug {
            minifyEnabled true  //开启混淆
            zipAlignEnabled true  //Zipalign 优化
            shrinkResources true   //移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//同时配置多个ProGuard配置文件
            signingConfig signingConfigs.config
        }
    }

    //android中的配置块
    sourceSets {//配置目录指向
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

//    多渠道打包
    productFlavors {//多个渠道配置
        baidu {
            //设置该渠道的渠道标识，要和清单文件中的保持一致
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "baidu"]
            buildConfigField('String', 'WEB_URL', '"http://www.baidu.com"')//配置BuildConfig中的自定义常量
            //设置该渠道下的包名
//            applicationId "com.monkey.baidu"
//            //设置该渠道下的versionCode
//            versionCode 1
//            //设置该渠道下的versionName
//            versionName "1.0.1"
        }

        wandoujia {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wandoujia"]
        }

        xiaomi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
        }

        google {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "google"]
        }
    }

//    批量处理
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
//打包时生成不同渠道名称的apk
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "Monkey-v${defaultConfig.versionName}_${variant.buildType.name}_${variant.productFlavors[0].name}.apk"
        }
    }


}

repositories {
    jcenter()
    mavenCentral()
    google()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //这里需要双引号
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.ext.supportVersion"
    implementation "com.android.support:design:$rootProject.ext.supportVersion"
    //添加kotlin开发
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"//主要是这两个依赖
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"//主要是这两个依赖

    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.android.support:design:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    //添加Flutter Moudle的依赖，在旧项目中引入flutter
    implementation project(':flutter')

    //butterknife
    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'

    //知乎的图片选择器
    implementation 'com.zhihu.android:matisse:0.5.1'
    //easyPermissions 权限申请管理框架
    implementation 'pub.devrel:easypermissions:1.3.0'

    //glide 的图片加载框架
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

    //Picasso的图片加载框架
    implementation 'com.squareup.picasso:picasso:2.71828'

    //smartRefreshLatout 列表刷新控件上啦加载更多，下拉刷新
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.4-7'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.4-7'
    //日志打印框架logger
    implementation 'com.orhanobut:logger:2.2.0'

    //RxJava
    implementation "io.reactivex.rxjava2:rxjava:2.2.1"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'//切换线程时需要用
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'

    //retrofit网络请求框架
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    //数据解析
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    //okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    //okhttp的log信息
    implementation "com.squareup.okhttp3:logging-interceptor:3.10.0"

    //lottie的动画库json加载动画库
    implementation 'com.airbnb.android:lottie:2.5.5'

    //luban的图片压缩接近微信的压缩
    implementation 'top.zibin:Luban:1.1.8'

    //eventbus的集成，事件分发总线
    implementation 'org.greenrobot:eventbus:3.1.1'

    //添加MPAndroidChart图标控件
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0-alpha'

}
