// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from :"config.gradle"//定义全局的配置参数（脚本，应用插件使用Project.apply()）

buildscript {
    //添加kotlin的版本
    ext{
        kotlin_version = '1.2.60'
    }

    repositories {
//        阿里云的仓库
        maven{url 'http://maven.aliyun.com/nexus/content/groups/public/'}
        mavenCentral()
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.2'//第三方插件Android Gradle插件
//        kotlin开发的插件(第三方插件)
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {//仓库
        maven {
            url 'https://maven.google.com/'
        }
        //添加MPandroidchart
        maven {
            url 'https://jitpack.io'
        }
        jcenter()
        mavenCentral()
        google()
    }
}

//如果有多个module的配置是一样的，可以将这些配置提取出来，使用全局配置
ext {
    compileSdkVersion = 28
    buildSdkVersion = '27.0.3'
    applicationId = "com.example.xlc.monkey"
    minSdkVersion = 16
    targetSdkVersion = 28
    versionCode = 1
    versionName = "1.0.0"
    supportVersion = '27.1.1'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


//task test{
//    doLast{
//        println 'hello world'
//    }
//}
//

//自定义gradle wrapper
//task wrapper(type: Wrapper){
//    gradleVersion ='4.2.1'
//    distributionUrl = ''
//    distributionPath = wrapper/dists
//}


//apply plugin: CustomPlugin
////自定义对象插件
//class CustomPlugin implements Plugin<Project>{
//    @Override
//    void apply(Project target) {
//            target.task('CustomPluginTask'){
//                doLast{
//                    println "自定义插件"
//                }
//            }
//    }
//}